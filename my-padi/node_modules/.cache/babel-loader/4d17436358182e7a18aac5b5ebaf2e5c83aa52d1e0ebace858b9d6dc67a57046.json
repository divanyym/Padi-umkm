{"ast":null,"code":"var _jsxFileName = \"D:\\\\PaDi\\\\my-padi\\\\src\\\\components\\\\Chipview\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst noOp = () => {};\nconst defaultList = [];\nfunction ChipView(props) {\n  _s();\n  const {\n    options = defaultList,\n    setOptions = noOp,\n    values = defaultList,\n    setValues = noOp,\n    children,\n    ...restProps\n  } = props;\n  const deleteOption = value => event => {\n    event === null || event === void 0 ? void 0 : event.preventDefault();\n    setOptions(options => options.filter(option => option.value !== value));\n  };\n  const toggle = value => event => {\n    event === null || event === void 0 ? void 0 : event.preventDefault();\n    setValues(values => {\n      const newValues = values.includes(value) ? values.filter(v => v !== value) : [...values, value];\n      return options.filter(option => newValues.includes(option.value)).map(option => option.value);\n    });\n  };\n  React.useEffect(() => {\n    setValues(values => {\n      if (values.every(value => options.find(option => option.value === value))) {\n        return values;\n      }\n      return options.filter(option => values.includes(option.value)).map(option => option.value);\n    });\n  }, [options]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...restProps,\n    children: typeof children === \"function\" ? options.map((option, index) => children({\n      index,\n      value: option.value,\n      label: option.label,\n      isSelected: values.includes(option.value),\n      toggle: toggle(option.value),\n      delete: deleteOption(option.value)\n    })) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(ChipView, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ChipView;\nChipView.propTypes = {\n  className: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string,\n    value: PropTypes.string\n  })),\n  setOptions: PropTypes.func,\n  values: PropTypes.arrayOf(PropTypes.string),\n  setValues: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.node])\n};\nexport { ChipView };\nvar _c;\n$RefreshReg$(_c, \"ChipView\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","noOp","defaultList","ChipView","props","_s","options","setOptions","values","setValues","children","restProps","deleteOption","value","event","preventDefault","filter","option","toggle","newValues","includes","v","map","useEffect","every","find","index","label","isSelected","delete","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","className","string","arrayOf","shape","func","oneOfType","node","$RefreshReg$"],"sources":["D:/PaDi/my-padi/src/components/Chipview/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst noOp = () => {};\r\nconst defaultList = [];\r\n\r\nfunction ChipView(props) {\r\n    const {\r\n        options = defaultList,\r\n        setOptions = noOp,\r\n        values = defaultList,\r\n        setValues = noOp,\r\n        children,\r\n        ...restProps \r\n    } = props;\r\n\r\n    const deleteOption = (value) => (event) => {\r\n        event?.preventDefault();\r\n        setOptions((options) => options.filter((option) => option.value !== value));\r\n    };\r\n\r\n    const toggle = (value) => (event) => {\r\n        event?.preventDefault();\r\n        setValues((values) => {\r\n            const newValues = values.includes(value) ? values.filter((v) => v !== value) : [...values, value];\r\n            return options.filter((option) => newValues.includes(option.value)).map((option) => option.value);\r\n        });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        setValues((values) => {\r\n            if (values.every((value) => options.find((option) => option.value === value))) {\r\n                return values;\r\n            }\r\n            return options.filter((option) => values.includes(option.value)).map((option) => option.value);\r\n        });\r\n    }, [options]);\r\n\r\n    return (\r\n        <div {...restProps}>\r\n            {typeof children === \"function\"\r\n                ? options.map((option, index) =>\r\n                    children({\r\n                        index,\r\n                        value: option.value,\r\n                        label: option.label,\r\n                        isSelected: values.includes(option.value),\r\n                        toggle: toggle(option.value),\r\n                        delete: deleteOption(option.value),\r\n                    })\r\n                )\r\n                : children}\r\n        </div>\r\n    );\r\n}\r\n\r\nChipView.propTypes = {\r\n    className: PropTypes.string,\r\n    options: PropTypes.arrayOf(PropTypes.shape({ label: PropTypes.string, value: PropTypes.string })),\r\n    setOptions: PropTypes.func,\r\n    values: PropTypes.arrayOf(PropTypes.string),\r\n    setValues: PropTypes.func,\r\n    children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\r\n};\r\n\r\nexport { ChipView };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}